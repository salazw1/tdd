# name: CI workflow
# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     container: python:3.9-slim

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v3

#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt

#     - name: Lint with flake8
#       run: |
#         flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
#         flake8 src --count --max-complexity=10 --max-line-length=127 --statistics

#     - name: Run unit tests with nose
#       run:
#         nosetests -v --with-spec --spec-color --with-coverage --cover-package=app
name: CI workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        flake8 src --count --max-complexity=10 --max-line-length=127 --statistics

    - name: Run unit tests with nose
      run:
        nosetests -v --with-spec --spec-color --with-coverage --cover-package=app
